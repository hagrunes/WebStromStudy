{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport shortId from 'shortid';\nexport var initalState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '정화식'\n    },\n    content: '첫 번째 게시글 #해시테그 #익스프래스',\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://t1.daumcdn.net/daumtop_chanel/op/20200723055344399.png'\n    }, {\n      id: shortId.generate(),\n      src: 'https://www.google.co.kr/logos/doodles/2020/december-holidays-days-2-30-6753651837108830.3-law.gif'\n    }, {\n      id: shortId.generate(),\n      src: 'http://img.mimacstudy.com/FRONT/main/renew2017/dsm_logo.gif'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'nero'\n      },\n      content: '우와 개정판~'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'hero'\n      },\n      content: '얼른 사고 싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nexport var removeComment = function removeComment(data) {\n  return {\n    type: REMOVE_POST_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '정화식'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '정화식'\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: false\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        addPostDone: true,\n        addPostLoading: false\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case REMOVE_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: false\n      });\n\n    case REMOVE_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        addPostDone: true,\n        addPostLoading: false\n      });\n\n    case REMOVE_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: false\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var post = _objectSpread({}, state.mainPosts[postIndex]);\n\n        post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: mainPosts,\n          addCommentDone: true,\n          addCommentLoading: false\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/LEC/myStudy/front/reducers/post.js"],"names":["shortId","initalState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","removeComment","dummyPost","dummyComment","reducer","state","action","error","postIndex","findIndex","v","postId","post"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\n\r\nexport const initalState = {\r\n  mainPosts: [{\r\n    id: 1,\r\n    User: {\r\n      id: 1,\r\n      nickname: '정화식',\r\n    },\r\n    content: '첫 번째 게시글 #해시테그 #익스프래스',\r\n    Images: [{\r\n      id: shortId.generate(),\r\n      src: 'https://t1.daumcdn.net/daumtop_chanel/op/20200723055344399.png',\r\n    }, {\r\n      id: shortId.generate(),\r\n      src: 'https://www.google.co.kr/logos/doodles/2020/december-holidays-days-2-30-6753651837108830.3-law.gif',\r\n    }, {\r\n      id: shortId.generate(),\r\n      src: 'http://img.mimacstudy.com/FRONT/main/renew2017/dsm_logo.gif',\r\n    }],\r\n    Comments: [{\r\n      id: shortId.generate(),\r\n      User: {\r\n        id: shortId.generate(),\r\n        nickname: 'nero',\r\n      },\r\n      content: '우와 개정판~',\r\n    }, {\r\n      id: shortId.generate(),\r\n      User: {\r\n        id: shortId.generate(),\r\n        nickname: 'hero',\r\n      },\r\n      content: '얼른 사고 싶어요~',\r\n    }],\r\n  }],\r\n  imagePaths: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\nexport const removeComment = (data) => ({\r\n  type: REMOVE_POST_REQUEST,\r\n  data,\r\n});\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: '정화식',\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: '정화식',\r\n  },\r\n});\r\n\r\nconst reducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        addPostLoading: true,\r\n        addPostDone: false,\r\n        addPostError: false,\r\n      };\r\n    case ADD_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n        addPostDone: true,\r\n        addPostLoading: false,\r\n      };\r\n    case ADD_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        addPostLoading: false,\r\n        addPostError: action.error,\r\n      };\r\n    case REMOVE_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        addPostLoading: true,\r\n        addPostDone: false,\r\n        addPostError: false,\r\n      };\r\n    case REMOVE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n        addPostDone: true,\r\n        addPostLoading: false,\r\n      };\r\n    case REMOVE_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        addPostLoading: false,\r\n        addPostError: action.error,\r\n      };\r\n    case ADD_COMMENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: true,\r\n        addCommentDone: false,\r\n        addCommentError: false,\r\n      };\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n      const post = { ...state.mainPosts[postIndex] };\r\n      post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = post;\r\n      return {\r\n        ...state,\r\n        mainPosts,\r\n        addCommentDone: true,\r\n        addCommentLoading: false,\r\n      };\r\n    }\r\n    case ADD_COMMENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: false,\r\n        addCommentError: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}