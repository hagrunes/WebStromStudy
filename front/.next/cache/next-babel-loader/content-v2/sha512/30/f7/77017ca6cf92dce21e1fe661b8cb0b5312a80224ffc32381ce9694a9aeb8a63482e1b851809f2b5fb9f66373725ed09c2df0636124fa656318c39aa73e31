{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post';\n\nfunction addPostAPI() {\n  return axios.post('/api/post');\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postID}/comment`, data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.respond.data\n    });\n  }\n}\n\nfunction* addComment() {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.respond.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  // eslint-disable-next-line no-undef\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  // eslint-disable-next-line no-undef\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/LEC/myStudy/front/sagas/post.js"],"names":["all","delay","fork","put","takeLatest","axios","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPostAPI","post","addCommentAPI","data","postID","addPost","action","type","err","respond","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EACuBC,mBADvB,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,gBAJF,EAKEC,gBALF,QAMO,kBANP;;AAQA,SAASC,UAAT,GAAsB;AACpB,SAAOP,KAAK,CAACQ,IAAN,CAAW,WAAX,CAAP;AACD;;AACD,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAOV,KAAK,CAACQ,IAAN,CAAY,aAAYE,IAAI,CAACC,MAAO,UAApC,EAA+CD,IAA/C,CAAP;AACD;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMjB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAER,gBADE;AAERI,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOK,GAAP,EAAY;AACZ,UAAMjB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEV,gBADE;AAERM,MAAAA,IAAI,EAAEK,GAAG,CAACC,OAAJ,CAAYN;AAFV,KAAD,CAAT;AAID;AACF;;AACD,UAAUO,UAAV,GAAuB;AACrB,MAAI;AACF;AACA,UAAMrB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEX;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOY,GAAP,EAAY;AACZ,UAAMjB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEb,mBADE;AAERS,MAAAA,IAAI,EAAEK,GAAG,CAACC,OAAJ,CAAYN;AAFV,KAAD,CAAT;AAID;AACF;;AACD,UAAUQ,YAAV,GAAyB;AACvB;AACA,QAAMnB,UAAU,CAACM,gBAAD,EAAmBO,OAAnB,CAAhB;AACD;;AACD,UAAUO,eAAV,GAA4B;AAC1B;AACA,QAAMpB,UAAU,CAACG,mBAAD,EAAsBe,UAAtB,CAAhB;AACD;;AACD,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMzB,GAAG,CAAC,CACRE,IAAI,CAACqB,YAAD,CADI,EAERrB,IAAI,CAACsB,eAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n} from '../reducers/post';\r\n\r\nfunction addPostAPI() {\r\n  return axios.post('/api/post');\r\n}\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/api/post/${data.postID}/comment`, data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.respond.data,\r\n    });\r\n  }\r\n}\r\nfunction* addComment() {\r\n  try {\r\n    // const result = yield call(addPostAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.respond.data,\r\n    });\r\n  }\r\n}\r\nfunction* watchAddPost() {\r\n  // eslint-disable-next-line no-undef\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n  // eslint-disable-next-line no-undef\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}