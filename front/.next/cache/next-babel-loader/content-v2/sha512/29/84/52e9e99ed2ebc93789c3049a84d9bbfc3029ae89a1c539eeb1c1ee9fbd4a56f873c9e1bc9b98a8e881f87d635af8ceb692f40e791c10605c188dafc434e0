{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\LEC\\\\myStudy\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Button, Card, Comment, List, Popover } from 'antd';\nimport { EllipsisOutlined, RetweetOutlined, MessageOutlined, HeartOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  /*\r\n    const { me } = useSelector((state) => state.user);\r\n    const id = me?.id; // 옵셔널체이닝\r\n  */\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpended = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpended(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  });\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 34\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 24\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 27\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostCard, \"4YtuweIgwxDYYoBx10gorgICSSM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/LEC/myStudy/front/components/PostCard.js"],"names":["React","useState","useCallback","PropTypes","Avatar","Button","Card","Comment","List","Popover","EllipsisOutlined","RetweetOutlined","MessageOutlined","HeartOutlined","HeartTwoTone","useDispatch","useSelector","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","dispatch","liked","setLiked","commentFormOpened","setCommentFormOpended","onToggleLike","prev","onToggleComment","onRemovePost","type","data","id","state","user","me","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar, Button, Card, Comment, List, Popover } from 'antd';\r\nimport { EllipsisOutlined, RetweetOutlined, MessageOutlined, HeartOutlined, HeartTwoTone } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PostImages from './PostImages';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\r\n\r\nconst PostCard = ({ post }) => {\r\n/*\r\n  const { me } = useSelector((state) => state.user);\r\n  const id = me?.id; // 옵셔널체이닝\r\n*/\r\n  const dispatch = useDispatch();\r\n  const [liked, setLiked] = useState(false);\r\n  const [commentFormOpened, setCommentFormOpended] = useState(false);\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpended((prev) => !prev);\r\n  }, []);\r\n\r\n  const onRemovePost = useCallback(() => {\r\n    dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  });\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n            : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={(\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button type=\"primary\">수정</Button>\r\n                    <Button type=\"danger\" onClick={onRemovePost}>삭제</Button>\r\n                  </>\r\n                ) : <Button>신고</Button> }\r\n              </Button.Group>\r\n            )}\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={<PostCardContent postData={post.content} />}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments.length}개의 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}